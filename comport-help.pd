#N canvas 456 56 1151 653 10;
#X obj 15 49 cnv 18 220 400 empty empty Query\ info 20 12 1 16 #e0e0e0 #404040 0;
#X obj 246 49 cnv 18 320 400 empty empty Open\ /\ close\ /\ control 20 12 1 16 #e0e0e0 #404040 0;
#X obj 577 49 cnv 18 250 400 empty empty Configure 20 12 1 16 #e0e0e0 #404040 0;
#X obj 838 49 cnv 18 290 400 empty empty Send\ data 20 12 1 16 #e0e0e0 #404040 0;
#X obj 15 460 cnv 18 1113 130 empty empty Receive\ /\ get\ info 20 12 1 16 #e0e0e0 #404040 0;
#X msg 584 106 bits 8;
#X msg 584 132 stopbit 0;
#X msg 584 218 parity 0;
#X text 642 217 parity 1=even \, -1=odd \, 0=off;
#X text 633 105 databits 5 \, 6 \, 7 \, 8;
#X obj 584 419 s comctl;
#X text 654 255 use handshake xon/off 1=on 0=off, f 22;
#X text 647 299 cts/rts hardwarehandshake 1=on 0=off, f 25;
#X obj 854 95 hsl 128 15 0 255 0 0 empty empty empty -2 -6 0 8 #fcfcfc #000000 #000000 0 1;
#X msg 584 351 dtr \$1;
#X obj 595 330 tgl 15 0 empty empty empty 0 -6 0 8 #e8e828 #f430f0 #000000 0 1;
#X obj 597 375 tgl 15 0 empty empty empty 0 -6 0 8 #e8e828 #fc0400 #000000 0 1;
#X msg 584 394 rts \$1;
#X msg 23 182 help;
#X msg 23 152 info;
#X msg 23 90 devices;
#X floatatom 851 140 5 0 255 0 - - - 0;
#X text 74 82 print available devices (wait for it...), f 24;
#N canvas 682 62 1106 488 bauds 0;
#X msg 315 330 baud 57600;
#X msg 353 368 baud 230400;
#X msg 334 349 baud 115200;
#X msg 296 311 baud 38400;
#X msg 277 292 baud 19200;
#X msg 258 273 baud 9600;
#X msg 239 254 baud 4800;
#X msg 220 235 baud 2400;
#X obj 427 459 s comctl;
#X msg 201 216 baud 1800;
#X msg 182 197 baud 1200;
#X msg 163 178 baud 600;
#X msg 144 159 baud 300;
#X msg 125 140 baud 200;
#X msg 87 102 baud 134;
#X msg 68 83 baud 110;
#X msg 49 64 baud 75;
#X msg 30 45 baud 50;
#X msg 11 26 baud 0;
#X msg 106 121 baud 150;
#X text 364 311 this is a special baud rate that can be configured;
#X text 60 25 0 deasserts control lines and resets the serial port;
#X text 431 368 won't work with standard setup. See setserial;
#X msg 427 287 baud \$1;
#X text 514 325 on-the-fly with setserial:;
#X text 515 354 gives 14400 baud instead of 38400;
#X text 513 340 "setserial /dev/ttyS0 spd_cust divisor 8";
#X msg 415 219 115200;
#X floatatom 388 160 7 1 115200 1 divisor - - 0;
#X obj 427 248 / 1;
#X obj 388 179 sel 0;
#X floatatom 427 268 7 0 0 0 - - - 0;
#X text 478 159 (1-115200);
#X obj 415 199 t b f;
#X text 386 142 On Windows some other baud rates might work:;
#X obj 968 420 s comctl;
#X msg 946 380 baud 4e+06;
#X msg 927 361 baud 3.5e+06;
#X msg 908 342 baud 3e+06;
#X msg 889 323 baud 2.5e+06;
#X msg 870 304 baud 2e+06;
#X msg 851 285 baud 1.5e+06;
#X msg 832 266 baud 1.152e+06;
#X msg 813 247 baud 1e+06;
#X msg 794 228 baud 921600;
#X msg 775 209 baud 576000;
#X msg 756 190 baud 500000;
#X msg 737 171 baud 460800;
#X msg 718 152 baud 230400;
#X text 714 134 Other baud rates might be avaiable \, depending on the OS:;
#X text 8 8 Standard baud rates for linux:;
#X connect 0 0 8 0;
#X connect 1 0 8 0;
#X connect 2 0 8 0;
#X connect 3 0 8 0;
#X connect 4 0 8 0;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 7 0 8 0;
#X connect 9 0 8 0;
#X connect 10 0 8 0;
#X connect 11 0 8 0;
#X connect 12 0 8 0;
#X connect 13 0 8 0;
#X connect 14 0 8 0;
#X connect 15 0 8 0;
#X connect 16 0 8 0;
#X connect 17 0 8 0;
#X connect 18 0 8 0;
#X connect 19 0 8 0;
#X connect 23 0 8 0;
#X connect 27 0 29 0;
#X connect 28 0 30 0;
#X connect 29 0 31 0;
#X connect 30 1 33 0;
#X connect 31 0 23 0;
#X connect 33 0 27 0;
#X connect 33 1 29 1;
#X connect 36 0 35 0;
#X connect 37 0 35 0;
#X connect 38 0 35 0;
#X connect 39 0 35 0;
#X connect 40 0 35 0;
#X connect 41 0 35 0;
#X connect 42 0 35 0;
#X connect 43 0 35 0;
#X connect 44 0 35 0;
#X connect 45 0 35 0;
#X connect 46 0 35 0;
#X connect 47 0 35 0;
#X connect 48 0 35 0;
#X restore 584 81 pd bauds;
#X msg 584 262 xonxoff \$1;
#X obj 595 241 tgl 15 0 empty empty empty 0 -6 0 8 #e8e828 #f430f0 #000000 0 1;
#X msg 584 306 rtscts \$1;
#X obj 595 285 tgl 15 0 empty empty empty 0 -6 0 8 #e8e828 #f430f0 #000000 0 1;
#X text 17 16 comport: a serial port interface;
#X msg 901 135 13;
#X msg 23 120 ports;
#X msg 943 134 48 49 50 51 52 53 54 55 56 57;
#X text 943 115 send a list of bytes:;
#X text 896 116 <CR>:;
#X msg 598 161 1;
#X msg 628 161 1.5;
#X msg 659 161 2;
#X text 655 182 number of stopbits (Windows only), f 19;
#X msg 584 189 stopbit \$1;
#X text 648 127 extra stopbit 1=on \, 0=off (linux \, MacOS), f 25;
#X text 849 78 You can send bytes directly (0-255):;
#X text 38 620 2006-2010 Martin Peach;
#X text 15 606 (C) 1998-2015 IEM Winfried Ritsch GPL (see LICENSE.txt);
#X obj 851 226 s comctl;
#X msg 852 278 print hello_world;
#X text 850 257 send some text:;
#X obj 852 309 s comctl;
#N canvas 200 243 450 300 send_from_keyboard 0;
#X obj 48 122 key;
#X obj 48 146 sel 0;
#X floatatom 158 130 4 0 0 2 ascii - - 0;
#X obj 75 173 spigot;
#X obj 129 131 tgl 15 0 empty empty on 0 -8 0 10 #e8e828 #f430f0 #000000 0 1;
#X obj 75 198 outlet;
#X connect 0 0 1 0;
#X connect 1 1 2 0;
#X connect 1 1 3 0;
#X connect 3 0 5 0;
#X connect 4 0 3 1;
#X coords 0 -1 1 1 120 50 1 100 100;
#X restore 944 161 pd send_from_keyboard;
#X msg 984 396 break \$1;
#X obj 984 277 tgl 15 0 empty empty empty 0 -6 0 8 #e8e828 #f430f0 #000000 0 1;
#X obj 984 421 s comctl;
#X obj 1003 325 t b b;
#X obj 1003 304 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 1030 348 del 50;
#X msg 1003 348 1;
#X msg 1030 371 0;
#X text 1000 287 send a 50ms break;
#X text 982 258 set break condition:;
#X obj 23 258 s comctl;
#X text 54 183 print usage info;
#X msg 23 228 verbose \$1;
#X obj 37 207 tgl 15 0 empty empty empty 0 -6 0 8 #e8e828 #f430f0 #000000 0 1;
#X text 57 149 send status list to right outlet, f 23;
#X text 64 116 list available ports to right outlet, f 25;
#X text 54 206 verbose to console;
#X obj 254 360 s comctl;
#X msg 254 211 pollintervall 1;
#X msg 254 168 close;
#X msg 254 82 open 1;
#X msg 254 132 devicename /dev/ttyS1;
#X text 391 125 open the serial port by name, f 16;
#X msg 254 104 open 0;
#X msg 254 247 hupcl \$1;
#X msg 254 283 retries 10;
#X text 325 277 how many times to retry a lost connection, f 31;
#X obj 278 313 tgl 15 0 empty empty empty 0 -6 0 8 #e8e828 #fc0400 #000000 0 1;
#X msg 254 333 inputprocess \$1;
#X text 353 204 set poll interval for read in ms (default is 10ms), f 32;
#X text 311 240 hang up connection on last close (not on Windows), f 33;
#X text 631 392 set RTS;
#X text 633 350 set DTR;
#X text 640 81 set baud rate;
#N canvas 205 37 541 333 creation_arguments 0;
#X text 19 26 creation arguments:;
#X text 55 154 instead of a numeric deviceID you can also pass a device pattern (e.g. "/dev/tty[ASU]*") to specify the available default devices. in this case \, the deviceID is assumed to be '0'. This is exspecially useful if you want to avoid testing specific devices for their availabilty.;
#X text 147 26 [comport <deviceID> <baudrate>] will try to open the given device from the list of default devices \, using the (optional) baudrate.;
#X text 75 230 e.g. to only consider USB-devices use [comport /dev/ttyUSB*];
#X text 74 250 be aware that device names are hightly platform specific \, so if you use such a pattern \, be prepared that you patch might no longer work on other operating systems.;
#X text 55 88 if deviceID is negative \, comport won't try to open any device at creation time.;
#X restore 255 16 pd creation_arguments;
#X text 354 324 enable automatic input processing (not on Windows \, default: disabled), f 35;
#X obj 851 117 % 256;
#X text 300 82 open serial port by number;
#X text 299 167 close Serial port;
#X obj 22 507 cnv 18 142 25 empty empty empty 20 12 1 16 #feffc6 #404040 0;
#X obj 25 511 comport 1 9600, f 22;
#X obj 25 486 r comctl;
#X obj 25 565 print incoming bytes;
#X obj 25 541 spigot;
#X obj 70 541 tgl 15 0 empty empty empty 0 -6 0 8 #e8e828 #f430f0 #000000 0 1;
#X obj 519 555 tgl 15 0 empty empty dsr 0 20 1 11 #14e814 #fc2828 #000000 0 1;
#X obj 556 556 tgl 15 0 empty empty cts 0 20 1 11 #14e814 #fc2828 #000000 0 1;
#X obj 519 532 route dsr cts;
#X floatatom 610 556 3 0 0 3 parity - - 0;
#X floatatom 653 556 3 0 0 3 stop - - 0;
#X floatatom 696 556 3 0 0 3 data - - 0;
#X text 610 514 serial packet format;
#X obj 610 532 route parity stop data;
#X floatatom 154 556 10 0 0 3 baud - - 0;
#X floatatom 223 556 3 0 0 3 port - - 0;
#X obj 292 556 tgl 15 0 empty empty open -6 20 1 11 #14e814 #fc2828 #000000 0 1;
#X obj 361 556 tgl 15 0 empty empty hupcl -6 20 1 11 #14e814 #fc2828 #000000 0 1;
#X floatatom 430 555 8 0 0 3 rxerrors - - 0;
#X obj 154 532 route baud port open hupcl rxerrors, f 58;
#X text 174 512 general info;
#X obj 755 557 tgl 15 0 empty empty rts/cts -10 20 1 11 #14e814 #fc2828 #000000 0 1;
#X obj 813 557 tgl 15 0 empty empty xon/xoff -14 20 1 11 #14e814 #fc2828 #000000 0 1;
#X text 762 514 handshaking;
#X obj 755 532 route rtscts xonxoff;
#X obj 886 555 print port_list;
#X obj 985 556 print other;
#X obj 886 532 route ports, f 17;
#X text 517 515 flow control;
#X connect 5 0 10 0;
#X connect 6 0 10 0;
#X connect 7 0 10 0;
#X connect 13 0 84 0;
#X connect 14 0 10 0;
#X connect 15 0 14 0;
#X connect 16 0 17 0;
#X connect 17 0 10 0;
#X connect 18 0 58 0;
#X connect 19 0 58 0;
#X connect 20 0 58 0;
#X connect 21 0 43 0;
#X connect 24 0 10 0;
#X connect 25 0 24 0;
#X connect 26 0 10 0;
#X connect 27 0 26 0;
#X connect 29 0 43 0;
#X connect 30 0 58 0;
#X connect 31 0 43 0;
#X connect 34 0 38 0;
#X connect 35 0 38 0;
#X connect 36 0 38 0;
#X connect 38 0 10 0;
#X connect 44 0 46 0;
#X connect 47 0 43 0;
#X connect 48 0 50 0;
#X connect 49 0 48 0;
#X connect 51 0 54 0;
#X connect 51 1 53 0;
#X connect 52 0 51 0;
#X connect 53 0 55 0;
#X connect 54 0 48 0;
#X connect 55 0 48 0;
#X connect 60 0 58 0;
#X connect 61 0 60 0;
#X connect 66 0 65 0;
#X connect 67 0 65 0;
#X connect 68 0 65 0;
#X connect 69 0 65 0;
#X connect 71 0 65 0;
#X connect 72 0 65 0;
#X connect 73 0 65 0;
#X connect 75 0 76 0;
#X connect 76 0 65 0;
#X connect 84 0 21 0;
#X connect 88 0 91 0;
#X connect 88 1 106 0;
#X connect 89 0 88 0;
#X connect 91 0 90 0;
#X connect 92 0 91 1;
#X connect 95 0 93 0;
#X connect 95 1 94 0;
#X connect 95 2 100 0;
#X connect 100 0 96 0;
#X connect 100 1 97 0;
#X connect 100 2 98 0;
#X connect 100 3 111 0;
#X connect 106 0 101 0;
#X connect 106 1 102 0;
#X connect 106 2 103 0;
#X connect 106 3 104 0;
#X connect 106 4 105 0;
#X connect 106 5 95 0;
#X connect 111 0 108 0;
#X connect 111 1 109 0;
#X connect 111 2 114 0;
#X connect 114 0 112 0;
#X connect 114 1 113 0;
